// styles/appearance/_shadows.scss

@use "sass:map";
//apply-shadow mixin
// 1. Define shadow values in a Sass map for maintainability
$_shadow-definitions: (
  "xs": (
    0 1px 2px 0 rgba(0, 0, 0, 0.05)
  ),
  "sm": (
    0 1px 3px 0 rgba(0, 0, 0, 0.1),
    0 1px 2px -1px rgba(0, 0, 0, 0.1)
  ),
  "md": (
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -2px rgba(0, 0, 0, 0.1)
  ),
  "lg": (
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -4px rgba(0, 0, 0, 0.1)
  ),
  "xl": (
    0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 8px 10px -6px rgba(0, 0, 0, 0.1)
  ),
  "2xl": (
    0 25px 50px -12px rgba(0, 0, 0, 0.25)
  )
  // Add more shadows here if needed
);

// 2. Generate CSS Custom Properties from the map
:root {
  @each $name, $value in $_shadow-definitions {
    // Output as --shadow-xs, --shadow-sm, etc.
    --shadow-#{$name}: #{$value};
  }
}

// 3. Define mixins that apply the CSS Custom Properties
//    (Keeps the original mixin names for compatibility)

%shadow__xs {
  box-shadow: var(--shadow-xs);
}

%shadow__sm {
  box-shadow: var(--shadow-sm);
}

%shadow__md {
  box-shadow: var(--shadow-md);
}

%shadow__lg {
  box-shadow: var(--shadow-lg);
}

%shadow__xl {
  box-shadow: var(--shadow-xl);
}

%shadow__2xl {
  box-shadow: var(--shadow-2xl);
}
@mixin apply-shadow($size) {
  @if not index(xs sm md lg xl 2xl, $size) {
    @error "Invalid shadow size '#{$size}'. Expected one of: xs, sm, md, lg, xl, 2xl";
  }
  @extend %shadow__#{$size};
}

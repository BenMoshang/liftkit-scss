// styles/components/_cards.scss
@use "sass:math";

@use "../base/globals"; // Adjusted path
@use "../appearance/colors"; // Adjusted path
@use "../typography/typography"; // Adjusted path

@mixin card-scale($scale) {
  @if type-of($scale) != number {
    @error "#{$scale} is not a number";
  }
  --card-scale-factor: #{globals.round-to($scale)};
}

.card {
  @include colors.bg__surface; // Use background mixin

  position: relative;
  overflow: hidden;
  // Default padding based on the '--card-scale-factor' variable.
  // Uses MAJOR-HALF ratio for vertical vs horizontal padding.
  // Falls back to body size if no scale factor is set.
  padding: calc(var(--card-scale-factor, #{globals.lookup("body", "regular", "size")}) / #{globals.round-to(globals.$MAJOR-HALF)}) var(--card-scale-factor, #{globals.lookup("body", "regular", "size")});
  border-radius: calc(var(--card-scale-factor, #{globals.lookup("body", "regular", "size")}) / #{globals.round-to(globals.$MAJOR-HALF)});

  // --- Automatic Padding Calculation ---
  // The following :has() selectors attempt to automatically set the --card-scale-factor
  // based on the largest typography class present inside the card.
  // This provides optically correct padding relative to the content size.
  // Browser support for :has() is required. https://caniuse.com/css-has
  // If :has() is not supported or fails, the padding falls back to being based on the 'body' font size.
  // Alternatively, use explicit modifiers like .card--title-a to set the scale.
  // ---
  :where(&:has(.overline)) {
    @include card-scale(globals.lookup("overline", "regular", "size"));
  }

  :where(&:has(.caption)) {
    @include card-scale(globals.lookup("caption", "regular", "size"));
  }

  :where(&:has(.label)) {
    @include card-scale(globals.lookup("label", "regular", "size"));
  }

  :where(&:has(.callout)) {
    @include card-scale(globals.lookup("callout", "regular", "size"));
  }

  :where(&:has(.body)) {
    @include card-scale(globals.lookup("body", "regular", "size"));
  }

  :where(&:has(.subheading)) {
    @include card-scale(globals.lookup("subheading", "regular", "size"));
  }

  :where(&:has(.heading)) {
    @include card-scale(globals.lookup("heading", "regular", "size"));
  }

  :where(&:has(.title-c)) {
    @include card-scale(globals.lookup("title-c", "regular", "size"));
  }

  :where(&:has(.title-b)) {
    @include card-scale(globals.lookup("title-b", "regular", "size"));
  }

  :where(&:has(.title-a)) {
    @include card-scale(globals.lookup("title-a", "regular", "size"));
  }

  :where(&:has(.display-2)) {
    @include card-scale(globals.lookup("display-2", "regular", "size"));
  }

  :where(&:has(.display-1)) {
    @include card-scale(globals.lookup("display-1", "regular", "size"));
  }

  // --- Explicit Padding Modifiers ---
  // Use these classes to manually set the padding scale if automatic detection
  // is not desired or not supported.
  &--display-1 { @include card-scale(globals.lookup("display-1", "regular", "size")); }
  &--display-2 { @include card-scale(globals.lookup("display-2", "regular", "size")); }
  &--title-a { @include card-scale(globals.lookup("title-a", "regular", "size")); }
  &--title-b { @include card-scale(globals.lookup("title-b", "regular", "size")); }
  &--title-c { @include card-scale(globals.lookup("title-c", "regular", "size")); }
  &--heading { @include card-scale(globals.lookup("heading", "regular", "size")); }
  &--subheading { @include card-scale(globals.lookup("subheading", "regular", "size")); }
  &--body { @include card-scale(globals.lookup("body", "regular", "size")); }
  &--callout { @include card-scale(globals.lookup("callout", "regular", "size")); }
  &--label { @include card-scale(globals.lookup("label", "regular", "size")); }
  &--caption { @include card-scale(globals.lookup("caption", "regular", "size")); }
  &--overline { @include card-scale(globals.lookup("overline", "regular", "size")); }
}
